{
  "ver": "1.0.25",
  "uuid": "112f0ef8-d9e4-428a-9ac3-81a75f0c48fc",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mediump mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_uv0 = a_uv0;\n}",
        "frag": "\nprecision highp float;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float u_dH;\nuniform float u_dS;\nuniform float u_dL;\nvoid main () {\n  vec4 texColor=texture2D(texture, v_uv0);\n  float r=texColor.r;\n  float g=texColor.g;\n  float b=texColor.b;\n  float a=texColor.a;\n  float h;\n  float s;\n  float l;\n  {\n      float max=max(max(r,g),b);\n      float min=min(min(r,g),b);\n      if(max==min){\n          h=0.0;\n      }else if(max==r&&g>=b){\n          h=60.0*(g-b)/(max-min)+0.0;\n      }else if(max==r&&g<b){\n          h=60.0*(g-b)/(max-min)+360.0;\n      }else if(max==g){\n          h=60.0*(b-r)/(max-min)+120.0;\n      }else if(max==b){\n          h=60.0*(r-g)/(max-min)+240.0;\n      }\n      l=0.5*(max+min);\n      if(l==0.0||max==min){\n          s=0.0;\n      }else if(0.0<=l&&l<=0.5){\n          s=(max-min)/(2.0*l);\n      }else if(l>0.5){\n          s=(max-min)/(2.0-2.0*l);\n      }\n  }\n  h=h+u_dH;\n  s=min(1.0,max(0.0,s+u_dS));\n  l=l;\n  vec4 finalColor;\n  {\n      float q;\n      if(l<0.5){\n          q=l*(1.0+s);\n      }else if(l>=0.5){\n          q=l+s-l*s;\n      }\n      float p=2.0*l-q;\n      float hk=h/360.0;\n      float t[3];\n      t[0]=hk+1.0/3.0;t[1]=hk;t[2]=hk-1.0/3.0;\n      for(int i=0;i<3;i++){\n          if(t[i]<0.0)t[i]+=1.0;\n          if(t[i]>1.0)t[i]-=1.0;\n      }\n      float c[3];\n      for(int i=0;i<3;i++){\n          if(t[i]<1.0/6.0){\n              c[i]=p+((q-p)*6.0*t[i]);\n          }else if(1.0/6.0<=t[i] && t[i]<0.5){\n              c[i]=q;\n          }else if(0.5<=t[i] && t[i]<2.0/3.0){\n              c[i]=p+((q-p)*6.0*(2.0/3.0-t[i]));\n          }else{\n              c[i]=p;\n          }\n      }\n      finalColor=vec4(c[0],c[1],c[2],a);\n  }\n  finalColor+=vec4(u_dL,u_dL,u_dL,0.0);\n  gl_FragColor=finalColor;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_nativeSize;\n  highp   mat4 cc_matView;\n  mediump mat4 cc_matViewInv;\n  mediump mat4 cc_matProj;\n  mediump mat4 cc_matProjInv;\n  mediump mat4 cc_matViewProj;\n  mediump mat4 cc_matViewProjInv;\n  mediump vec4 cc_cameraPos;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  gl_Position = cc_matViewProj * vec4(a_position, 1);\n  v_uv0 = a_uv0;\n}",
        "frag": "\nprecision highp float;\nuniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_nativeSize;\n  highp   mat4 cc_matView;\n  mediump mat4 cc_matViewInv;\n  mediump mat4 cc_matProj;\n  mediump mat4 cc_matProjInv;\n  mediump mat4 cc_matViewProj;\n  mediump mat4 cc_matViewProjInv;\n  mediump vec4 cc_cameraPos;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform ARGS {\n  float u_dH;\n  float u_dS;\n  float u_dL;\n};\nvoid main () {\n  vec4 texColor=texture2D(texture, v_uv0);\n  float r=texColor.r;\n  float g=texColor.g;\n  float b=texColor.b;\n  float a=texColor.a;\n  float h;\n  float s;\n  float l;\n  {\n      float max=max(max(r,g),b);\n      float min=min(min(r,g),b);\n      if(max==min){\n          h=0.0;\n      }else if(max==r&&g>=b){\n          h=60.0*(g-b)/(max-min)+0.0;\n      }else if(max==r&&g<b){\n          h=60.0*(g-b)/(max-min)+360.0;\n      }else if(max==g){\n          h=60.0*(b-r)/(max-min)+120.0;\n      }else if(max==b){\n          h=60.0*(r-g)/(max-min)+240.0;\n      }\n      l=0.5*(max+min);\n      if(l==0.0||max==min){\n          s=0.0;\n      }else if(0.0<=l&&l<=0.5){\n          s=(max-min)/(2.0*l);\n      }else if(l>0.5){\n          s=(max-min)/(2.0-2.0*l);\n      }\n  }\n  h=h+u_dH;\n  s=min(1.0,max(0.0,s+u_dS));\n  l=l;\n  vec4 finalColor;\n  {\n      float q;\n      if(l<0.5){\n          q=l*(1.0+s);\n      }else if(l>=0.5){\n          q=l+s-l*s;\n      }\n      float p=2.0*l-q;\n      float hk=h/360.0;\n      float t[3];\n      t[0]=hk+1.0/3.0;t[1]=hk;t[2]=hk-1.0/3.0;\n      for(int i=0;i<3;i++){\n          if(t[i]<0.0)t[i]+=1.0;\n          if(t[i]>1.0)t[i]-=1.0;\n      }\n      float c[3];\n      for(int i=0;i<3;i++){\n          if(t[i]<1.0/6.0){\n              c[i]=p+((q-p)*6.0*t[i]);\n          }else if(1.0/6.0<=t[i] && t[i]<0.5){\n              c[i]=q;\n          }else if(0.5<=t[i] && t[i]<2.0/3.0){\n              c[i]=p+((q-p)*6.0*(2.0/3.0-t[i]));\n          }else{\n              c[i]=p;\n          }\n      }\n      finalColor=vec4(c[0],c[1],c[2],a);\n  }\n  finalColor+=vec4(u_dL,u_dL,u_dL,0.0);\n  gl_FragColor=finalColor;\n}"
      }
    }
  ],
  "subMetas": {}
}