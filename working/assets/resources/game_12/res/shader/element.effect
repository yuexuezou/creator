// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  void main () {
    // 图片宽、高、对应圆半径、横轴x
    float width = 512.;
    float height = 512.;
    float img_scale = 0.25;
    width = width * img_scale;
    height = height * img_scale;

    float max_x = 412.;
    float max_scale_x = 0.3;
    float circle_r = 175.;
    float point_x = 0.;
    float point_y = 0.;
    point_x = point_x + v_uv0.x*width;
    // point_y = point_y + (1.-v_uv0.y)*height;
    point_y = point_y + v_uv0.y*height;
    float scale_x = (point_x/max_x)*max_scale_x;
    // 转换滚轴坐标
    float switch_x = circle_r*circle_r - point_y*point_y;
    switch_x = sqrt(switch_x);
    switch_x = switch_x * scale_x;
    float x = v_uv0.x - switch_x/width;

    vec4 o = vec4(1, 1, 1, 1);
    // v_uv0.x = v_uv0.x - 1.;
    // v_uv0.y = v_uv0.y - 1.;
    // float x = v_uv0.x;
    float y = v_uv0.y;
    #if USE_TEXTURE
    o *= texture(texture, vec2(x, y));
      #if CC_USE_ALPHA_ATLAS_TEXTURE
      o.a *= texture2D(texture, vec2(x, y)).r;
      #endif
    #endif

    o *= v_color;

    ALPHA_TEST(o);

    gl_FragColor = o;
  }
}%

